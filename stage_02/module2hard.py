# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# МОДУЛЬ 2. ДОПОЛНИТЕЛЬНОЕ ПРАКТИЧЕСКОЕ ЗАДАНИЕ (*)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Перед вами ворота с загадкой. В качестве ключа ворота имеют два поля для чисел.
# В первом поле постоянно меняются числа (от 3 до 20). Происходит это случайно.
# Второе поле пустое. Рядом с ним висит инструкция с описанием правила открывание ворот.
# Из инструкции стало понятно, что во второе поле нужно друг за другом написать пары чисел.
# Сумма пары чисел, следующих друг за другом, должна быть кратна числу из первого поля.
# Пример 1:
# 9 – число из первого поля.
# 1218273645 – нужный пароль
# Здесь (1 + 2), (1 + 8), (2 + 7), (3 + 6), (4 + 5) – пары. Число 9 кратно сумме каждой пары.
# Пример 2:
# 11 – число из первого поля.
# 11029384756 – нужный пароль.
# Здесь (1 + 10), (2 + 9), (3 + 8), (4 + 7), (5 + 6) – пары. Число 11 кратно сумме каждой пары.
# Выполнить задание:
# -   составить алгоритм подбора ключа;
# -   необходимы циклы, чтобы в зависимости от введённого числа n (от 3 до 20) программа выдавала нужный пароль result;
# -   можно использовать как цикл for, так и цикл while;
# -   первое число не входит в одно из чисел пары;
# -   пары чисел подбираются от 1 до 20 для текущего числа.
# Пары являются уникальными.
# Пример 3:
#
# 7 3 3 5 8
#
# В этой последовательности уникальными парами являются:
# Для первой цифры (7): 73 73 75 78
# Для второй цифры (3): 33 35 38.
# Все пароли для чисел от 3 до 20 (для проверки):
#
# 3 - 12
# 4 - 13
# 5 - 1423
# 6 - 121524
# 7 - 162534
# 8 - 13172635
# 9 - 1218273645
# 10 - 141923283746
# 11 - 11029384756
# 12 - 12131511124210394857
# 13 - 112211310495867
# 14 - 1611325212343114105968
# 15 - 1214114232133124115106978
# 16 - 1317115262143531341251161079
# 17 - 11621531441351261171089
# 18 - 12151811724272163631545414513612711810
# 19 - 118217316415514613712811910
# 20 - 13141911923282183731746416515614713812911
#
# Файл с кодом module2hard.py прикрепите к домашнему заданию или пришлите ссылку на репозиторий GitHub.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Программа :
# -*- coding: utf-8 -*-

passwords = {3: 12,
             4: 13,
             5: 1423,
             6: 121524,
             7: 162534,
             8: 13172635,
             9: 1218273645,
             10: 141923283746,
             11: 11029384756,
             12: 12131511124210394857,
             13: 112211310495867,
             14: 1611325212343114105968,
             15: 1214114232133124115106978,
             16: 1317115262143531341251161079,
             17: 11621531441351261171089,
             18: 12151811724272163631545414513612711810,
             19: 118217316415514613712811910,
             20: 13141911923282183731746416515614713812911}
n, result = 0, 0
print('+-------------------+')
print('| Очень древний код |')
print('+-------------------+')